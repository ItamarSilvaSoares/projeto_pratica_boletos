// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId   Int      @id @default(autoincrement()) @map("user_id")
  name     String
  lastname String
  password String
  username String   @unique
  cell     Cell[]
  email    Email[]
  billet   Billet[]

  @@map("users")
}

model Cell {
  cellId Int    @id @unique @default(autoincrement()) @map("cell_id")
  idUser Int    @map("id_user")
  cell   String
  user   User   @relation(fields: [idUser], references: [userId], onDelete: Cascade, onUpdate: Cascade)

  @@map("cell_phones")
}

model Email {
  emailId Int    @id @unique @default(autoincrement()) @map("email_id")
  idUser  Int    @map("id_user")
  email   String
  user    User   @relation(fields: [idUser], references: [userId], onDelete: Cascade, onUpdate: Cascade)

  @@map("emails")
}

model Billet {
  billetId      Int           @id @default(autoincrement()) @map("billet_id")
  idUser        Int           @map("id_user")
  idDescription Int           @map("id_description")
  idStatus      Int           @map("id_status")
  idLine        Int           @unique @map("id_line")
  validity      DateTime
  value         Float
  user          User          @relation(fields: [idUser], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  desc          Description   @relation(fields: [idDescription], references: [descriptionId], onDelete: Cascade, onUpdate: Cascade)
  status        Status        @relation(fields: [idStatus], references: [statusId], onDelete: Cascade, onUpdate: Cascade)
  line          ScannableLine @relation(fields: [idLine], references: [lineId], onDelete: Cascade, onUpdate: Cascade)

  @@map("billets")
}

model Description {
  descriptionId Int      @id @unique @default(autoincrement()) @map("description_id")
  description   String
  createdAt     DateTime @default(now())
  bill          Billet[]

  @@map("descriptions")
}

model Status {
  statusId Int      @id @unique @default(autoincrement()) @map("status_id")
  status   String
  bill     Billet[]

  @@map("status")
}

model ScannableLine {
  lineId Int      @id @unique @default(autoincrement()) @map("line_id")
  line   String
  bill   Billet[]

  @@map("scannable_lines")
}
